// Code generated by MockGen. DO NOT EDIT.
// Source: sns.go

// Package sns is a generated GoMock package.
package sns

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSNS is a mock of SNS interface.
type MockSNS struct {
	ctrl     *gomock.Controller
	recorder *MockSNSMockRecorder
}

// MockSNSMockRecorder is the mock recorder for MockSNS.
type MockSNSMockRecorder struct {
	mock *MockSNS
}

// NewMockSNS creates a new mock instance.
func NewMockSNS(ctrl *gomock.Controller) *MockSNS {
	mock := &MockSNS{ctrl: ctrl}
	mock.recorder = &MockSNSMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSNS) EXPECT() *MockSNSMockRecorder {
	return m.recorder
}

// Publish mocks base method.
func (m *MockSNS) Publish(input PublishInput) (*PublishOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Publish", input)
	ret0, _ := ret[0].(*PublishOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Publish indicates an expected call of Publish.
func (mr *MockSNSMockRecorder) Publish(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Publish", reflect.TypeOf((*MockSNS)(nil).Publish), input)
}
