// Code generated by MockGen. DO NOT EDIT.
// Source: sendgrid.go

// Package sendgrid is a generated GoMock package.
package sendgrid

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSendgrid is a mock of Sendgrid interface.
type MockSendgrid struct {
	ctrl     *gomock.Controller
	recorder *MockSendgridMockRecorder
}

// MockSendgridMockRecorder is the mock recorder for MockSendgrid.
type MockSendgridMockRecorder struct {
	mock *MockSendgrid
}

// NewMockSendgrid creates a new mock instance.
func NewMockSendgrid(ctrl *gomock.Controller) *MockSendgrid {
	mock := &MockSendgrid{ctrl: ctrl}
	mock.recorder = &MockSendgridMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSendgrid) EXPECT() *MockSendgridMockRecorder {
	return m.recorder
}

// Send mocks base method.
func (m *MockSendgrid) Send(send SendRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", send)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockSendgridMockRecorder) Send(send interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockSendgrid)(nil).Send), send)
}
